resource "azurerm_resource_group" "rg" {
  name     = var.azure_rg_name
  location = var.azure_rg_location
}

resource "azurerm_availability_set" "avlbset" {
  name                         = var.azure_availability_set_name
  resource_group_name          = azurerm_resource_group.rg.name
  location                     = azurerm_resource_group.rg.location
  platform_update_domain_count = 1
  platform_fault_domain_count  = 1
  managed                      = true
}

module "network" {
  source            = "./modules/azure/network"
  rg_name           = azurerm_resource_group.rg.name
  rg_location       = azurerm_resource_group.rg.location
  count_worker_node = var.worker_vm_count
}

resource "azurerm_linux_virtual_machine" "vm" {
  name                = var.azure_vm_name
  resource_group_name = azurerm_resource_group.rg.name
  location            = azurerm_resource_group.rg.location
  size                = var.azure_vm_size
  computer_name       = var.azure_vm_host_name
  admin_username      = var.azure_admin_username
  availability_set_id = azurerm_availability_set.avlbset.id

  network_interface_ids = [
    module.network.nic_id,
  ]

  admin_ssh_key {
    username   = var.azure_admin_username
    public_key = tls_private_key.ssh.public_key_openssh
  }

  os_disk {
    caching              = var.azure_vm_os_disk_caching
    storage_account_type = var.azure_vm_os_disk_type
    disk_size_gb         = var.azure_vm_os_disk_size["master"]
  }

  source_image_reference {
    publisher = var.azure_vm_image_publisher
    offer     = var.azure_vm_image_offer
    sku       = var.azure_vm_image_sku
    version   = var.azure_vm_image_version
  }

}

resource "azurerm_linux_virtual_machine" "worker" {
  count = var.worker_vm_count

  name                = "Worker-${count.index}"
  resource_group_name = azurerm_resource_group.rg.name
  location            = azurerm_resource_group.rg.location
  size                = var.azure_vm_size
  computer_name       = "worker-${count.index}"
  admin_username      = var.azure_admin_username
  availability_set_id = azurerm_availability_set.avlbset.id

  network_interface_ids = [
    module.network.worker-nic-ids[count.index],
  ]

  admin_ssh_key {
    username   = var.azure_admin_username
    public_key = tls_private_key.ssh.public_key_openssh
  }

  os_disk {
    caching              = var.azure_vm_os_disk_caching
    storage_account_type = var.azure_vm_os_disk_type
    disk_size_gb         = var.azure_vm_os_disk_size["worker"]
  }

  source_image_reference {
    publisher = var.azure_vm_image_publisher
    offer     = var.azure_vm_image_offer
    sku       = var.azure_vm_image_sku
    version   = var.azure_vm_image_version
  }
}

# - - - - - Passing variables to ansible .yaml file - - - - -
resource "local_file" "ansible_vars_tf" {
  content  = <<-DOC
  # Ansible vars_file containing variable values from Terraform
  # Generated by Terraform
  local_dir: ${local.root_dir}
  local_username: ${var.local_admin_username}
  remote_username: ${var.azure_admin_username}
  master_node_public_ip: ${azurerm_linux_virtual_machine.vm.public_ip_address}
  master_node_ssh_private_key: ${local.root_dir}/devops/ssh/ssh-key
  worker_node_private_ips: ${jsonencode(module.network.worker-private-ip)}
  DOC
  filename = "./ansible/vars/main.yml"
}

# - - - - - Kubernetes Provisioning - - - - -
# module "k8s" {
#   source          = "./modules/azure/kubernetes"
#   root_dir        = local.root_dir
#   kubeconfig_path = local_file.kubeconfig.filename
# }
